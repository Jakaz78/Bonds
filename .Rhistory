library(corrplot)
data_numeric <- data2[, c("Close", "Inflation", "10YUSBOND", "XAUUSD",
"USDPLN", "WIBOR", "10YDEBOND",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "DETAL")]
library(corrplot)
data_numeric <- data2[, c("Close", "Inflation", "10YUSBOND", "XAUUSD",
"USDPLN", "WIBOR", "10YDEBOND",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "DETAL")]
library(readxl)
data2 <- read_excel("data2.xlsx")
View(data2)
View(data2)
library(readxl)
data2 <- read_excel("data2.xlsx")
View(data2)
library(corrplot)
library(readxl)
data2 <- read_excel("data2.xlsx")
data_numeric <- data2[, c("Close", "Inflation", "10YUSBOND", "XAUUSD",
"USDPLN", "WIBOR", "10YDEBOND",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "DETAL")]
data_numeric <- data_numeric[sapply(data_numeric, is.numeric)]
cor_matrix <- cor(data_numeric, use = "pairwise.complete.obs", method = "pearson")
corrplot(cor_matrix, method = "color",
type = "upper", order = "hclust",
addCoef.col = "black", # dodaj wartości korelacji
tl.col = "black", tl.cex = 0.8)
library(corrplot)
library(readxl)
data2 <- read_excel("data2.xlsx")
data_numeric <- data2[, c("Close", "Inflation", "10YUSBOND", "XAUUSD",
"USDPLN", "WIBOR", "10YDEBOND",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "DETAL")]
data_numeric <- data_numeric[sapply(data_numeric, is.numeric)]
cor_matrix <- cor(data_numeric, use = "pairwise.complete.obs", method = "pearson")
corrplot(cor_matrix, method = "color",
type = order = "hclust",
library(corrplot)
library(readxl)
data2 <- read_excel("data2.xlsx")
data_numeric <- data2[, c("Close", "Inflation", "10YUSBOND", "XAUUSD",
"USDPLN", "WIBOR", "10YDEBOND",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "DETAL")]
data_numeric <- data_numeric[sapply(data_numeric, is.numeric)]
cor_matrix <- cor(data_numeric, use = "pairwise.complete.obs", method = "pearson")
corrplot(cor_matrix, method = "color",
order = "hclust",
addCoef.col = "black", # dodaj wartości korelacji
tl.col = "black", tl.cex = 0.8)
library(corrplot)
library(readxl)
data2 <- read_excel("data2.xlsx")
data_numeric <- data2[, c("Close", "Inflation", "10YUSBOND", "XAUUSD",
"USDPLN", "WIBOR", "10YDEBOND",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "DETAL","OIL")]
library(corrplot)
library(readxl)
data2 <- read_excel("data2.xlsx")
data_numeric <- data2[, c("Close", "Inflation", "10YUSBOND", "XAUUSD",
"USDPLN", "WIBOR", "10YDEBOND",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "DETAL","OIL")]
library(corrplot)
library(readxl)
data2 <- read_excel("data2.xlsx")
data_numeric <- data2[, c("Close", "Inflation", "10YUSBOND", "XAUUSD",
"USDPLN", "WIBOR", "10YDEBOND",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "DETAL","OIL")]
data_numeric <- data_numeric[sapply(data_numeric, is.numeric)]
cor_matrix <- cor(data_numeric, use = "pairwise.complete.obs", method = "pearson")
corrplot(cor_matrix, method = "color",
order = "hclust",
addCoef.col = "black", # dodaj wartości korelacji
tl.col = "black", tl.cex = 0.8)
library(corrplot)
library(readxl)
data2 <- read_excel("data2.xlsx")
data_numeric <- data2[, c("Close", "Inflation", "10YUSBOND", "XAUUSD",
"USDPLN", "WIBOR", "10YDEBOND",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "DETAL","OIL")]
data_numeric <- data_numeric[sapply(data_numeric, is.numeric)]
cor_matrix <- cor(data_numeric, use = "pairwise.complete.obs", method = "pearson")
corrplot(cor_matrix, method = "color",
order = "hclust",
addCoef.col = "black",
tl.col = "black", tl.cex = 0.8)
install.packages("tinytex")
install.packages("tinytex")
tinytex::install_tinytex()
install.packages("ggcorrplot")
---
title: "Sprawozdanie"
library(corrplot)
library(readxl)
library(tinytex)
library(ggcorrplot)
data2 <- read_excel("data2.xlsx")
data_numeric <- data2[, c("Close", "Inflation",  "XAUUSD",
"USDPLN",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "OIL")]
Y <- data2["Close"]
X <- data2["Inflation","XAUUSD", "USDPLN","WIG20","S&P500","UNEMPLOYMENT","PMI","OIL"]
data2 <- read_excel("data2.xlsx")
data_numeric <- data2[, c("Close", "Inflation",  "XAUUSD",
"USDPLN",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "OIL")]
Y <- data2["Close"]
X <- data2[,c("Inflation","XAUUSD", "USDPLN","WIG20","S&P500","UNEMPLOYMENT","PMI","OIL")]
data_numeric <- data_numeric[sapply(data_numeric, is.numeric)]
summary(data_numeric)
install.packages("tinytex")
install.packages("tinytex")
install.packages("tinytex")
tinytex::install_tinytex()
install.packages("tinytex")
library(corrplot)
library(readxl)
library(tinytex)
library(ggcorrplot)
data2 <- read_excel("data2.xlsx")
data_numeric <- data2[, c("Close", "Inflation",  "XAUUSD",
"USDPLN",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "OIL")]
Y <- data2["Close"]
X <- data2[,c("Inflation","XAUUSD", "USDPLN","WIG20","S&P500","UNEMPLOYMENT","PMI","OIL")]
data_numeric <- data_numeric[sapply(data_numeric, is.numeric)]
summary(Y)
summary(X)
cor_matrix <- cor(data_numeric, use = "pairwise.complete.obs", method = "pearson")
corrplot(cor_matrix, method = "color",
order = "hclust",
addCoef.col = "black",
tl.col = "black", tl.cex = 2.5, cl.cex = 2.5, number.cex=2.6)
summary(X)
summary(Y)
library(corrplot)
library(readxl)
library(tinytex)
library(ggcorrplot)
library(urca)
install.packages("urca")
install.packages("tseries")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("tidyr")
library(corrplot)
library(readxl)
library(tinytex)
library(ggcorrplot)
library(urca)
library(tseries)
library(ggplot2)
library(dplyr)
library(tidyr)
# Funkcja do testu ADF
adf_result <- function(series, name) {
test <- ur.df(series, type = "trend", selectlags = "AIC")
cat("Test ADF dla zmiennej:", name, "\n")
print(summary(test))
cat("\n\n")
}
# Funkcja do testu KPSS
kpss_result <- function(series, name) {
cat("Test KPSS dla zmiennej:", name, "\n")
print(kpss.test(series))
cat("\n\n")
}
# Funkcja do wykresu szeregu czasowego i jego różnicy
plot_series_diff <- function(series, name) {
df <- data.frame(
Time = 1:length(series),
Series = as.numeric(series),
Diff = c(NA, diff(series))
)
p1 <- ggplot(df, aes(x = Time, y = Series)) +
geom_line(color = "blue") +
labs(title = paste("Szereg czasowy:", name), y = name)
p2 <- ggplot(df, aes(x = Time, y = Diff)) +
geom_line(color = "red") +
labs(title = paste("Różnicowany szereg:", name), y = paste("Δ", name))
list(p1, p2)
}
variables <- c("Close", "Inflation", "XAUUSD", "USDPLN",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "OIL")
for (var in variables) {
cat("## Zmienna:", var, "\n\n")
series <- ts(data2[[var]])
# Wykresy
plots <- plot_series_diff(series, var)
print(plots[[1]])
print(plots[[2]])
# Test ADF
adf_result(series, var)
# Test KPSS (opcjonalnie)
kpss_result(series, var)
cat("\n\n")
}
# Funkcja do testu ADF
adf_result <- function(series, name) {
test <- ur.df(series, type = "trend", selectlags = "AIC")
cat("Test ADF dla zmiennej:", name, "\n")
print(summary(test))
cat("\n\n")
}
# Funkcja do testu KPSS
kpss_result <- function(series, name) {
cat("Test KPSS dla zmiennej:", name, "\n")
print(kpss.test(series))
cat("\n\n")
}
# Funkcja do wykresów
plot_series_diff <- function(series, name) {
df <- data.frame(
Time = 1:length(series),
Series = as.numeric(series),
Diff = c(NA, diff(series))
)
p1 <- ggplot(df, aes(x = Time, y = Series)) +
geom_line(color = "blue") +
labs(title = paste("Szereg czasowy:", name), y = name)
p2 <- ggplot(df, aes(x = Time, y = Diff)) +
geom_line(color = "red") +
labs(title = paste("Pierwsza różnica:", name), y = paste("Δ", name))
list(p1, p2)
}
variables <- c("Close", "Inflation", "XAUUSD", "USDPLN",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "OIL")
for (var in variables) {
cat("## Zmienna:", var, "\n\n")
series <- ts(data2[[var]])
# Wykresy
plots <- plot_series_diff(series, var)
print(plots[[1]])
print(plots[[2]])
# Test ADF
adf_result(series, var)
# Test KPSS
kpss_result(series, var)
cat("\n\n")
}
# Funkcja do testu ADF
adf_result <- function(series, name) {
test <- ur.df(series, type = "trend", selectlags = "AIC")
cat("Test ADF dla zmiennej:", name, "\n")
print(summary(test))
cat("\n\n")
}
# Funkcja do testu KPSS
kpss_result <- function(series, name) {
cat("Test KPSS dla zmiennej:", name, "\n")
print(kpss.test(series))
cat("\n\n")
}
# Funkcja do wykresów
plot_series_diff <- function(series, name) {
df <- data.frame(
Time = 1:length(series),
Series = as.numeric(series),
Diff = c(NA, diff(series))
)
p1 <- ggplot(df, aes(x = Time, y = Series)) +
geom_line(color = "blue") +
labs(title = paste("Szereg czasowy:", name), y = name)
p2 <- ggplot(df, aes(x = Time, y = Diff)) +
geom_line(color = "red") +
labs(title = paste("Pierwsza różnica:", name), y = paste("Δ", name))
list(p1, p2)
}
variables <- c("Close", "Inflation", "XAUUSD", "USDPLN",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "OIL")
for (var in variables) {
cat("## Zmienna:", var, "\n\n")
series <- ts(data2[[var]])
# Wykresy
plots <- plot_series_diff(series, var)
print(plots[[1]])
print(plots[[2]])
# Test ADF
adf_result(series, var)
# Test KPSS
kpss_result(series, var)
cat("\n\n")
}
# Funkcja do testu ADF
adf_result <- function(series, name) {
test <- ur.df(series, type = "trend", selectlags = "AIC")
cat("Test ADF dla zmiennej:", name, "\n")
print(summary(test))
cat("\n\n")
}
# Funkcja do testu KPSS
kpss_result <- function(series, name) {
cat("Test KPSS dla zmiennej:", name, "\n")
print(kpss.test(series))
cat("\n\n")
}
# Funkcja do wykresów
plot_series_diff <- function(series, name) {
df <- data.frame(
Time = 1:length(series),
Series = as.numeric(series),
Diff = c(NA, diff(series))
)
p1 <- ggplot(df, aes(x = Time, y = Series)) +
geom_line(color = "blue") +
labs(title = paste("Szereg czasowy:", name), y = name)
p2 <- ggplot(df, aes(x = Time, y = Diff)) +
geom_line(color = "red") +
labs(title = paste("Pierwsza różnica:", name), y = paste("Δ", name))
list(p1, p2)
}
variables <- c("Close", "Inflation", "XAUUSD", "USDPLN",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "OIL")
for (var in variables) {
cat("## Zmienna:", var, "\n\n")
series <- ts(data2[[var]])
# Wykresy
plots <- plot_series_diff(series, var)
print(plots[[1]])
print(plots[[2]])
# Test ADF
adf_result(series, var)
# Test KPSS
kpss_result(series, var)
cat("\n\n")
}
install.packages("zoo")
install.packages("zoo")
library(corrplot)
library(readxl)
library(tinytex)
library(ggcorrplot)
library(urca)
library(tseries)
library(ggplot2)
library(dplyr)
library(tidyr)
library(zoo)
data2 <- read_excel("data2.xlsx")
data_numeric <- data2[, c("Close", "Inflation",  "XAUUSD",
"USDPLN",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "OIL")]
Y <- data2["Close"]
X <- data2[,c("Inflation","XAUUSD", "USDPLN","WIG20","S&P500","UNEMPLOYMENT","PMI","OIL")]
data_numeric <- data_numeric[sapply(data_numeric, is.numeric)]
data2_interp <- data2
numeric_cols <- sapply(data2_interp, is.numeric)
data2_interp[numeric_cols] <- lapply(data2_interp[numeric_cols], function(col) {
na.approx(col, na.rm = FALSE)
})
colSums(is.na(data2_interp))
data2 <- read_excel("data2.xlsx")
data_numeric <- data2[, c("Close", "Inflation",  "XAUUSD",
"USDPLN",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "OIL")]
Y <- data2["Close"]
X <- data2[,c("Inflation","XAUUSD", "USDPLN","WIG20","S&P500","UNEMPLOYMENT","PMI","OIL")]
data_numeric <- data_numeric[sapply(data_numeric, is.numeric)]
data2_interp <- data2
numeric_cols <- sapply(data2_interp, is.numeric)
data2_interp[numeric_cols] <- lapply(data2_interp[numeric_cols], function(col) {
na.approx(col, na.rm = FALSE)
})
colSums(is.na(data2_interp))
data2 <- read_excel("data2.xlsx")
data2 <- data2[, c("Close", "Inflation",  "XAUUSD",
"USDPLN",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "OIL")]
Y <- data2["Close"]
X <- data2[,c("Inflation","XAUUSD", "USDPLN","WIG20","S&P500","UNEMPLOYMENT","PMI","OIL")]
data2 <- data2[sapply(data_numeric, is.numeric)]
data2_interp <- data2
numeric_cols <- sapply(data2_interp, is.numeric)
data2_interp[numeric_cols] <- lapply(data2_interp[numeric_cols], function(col) {
na.approx(col, na.rm = FALSE)
})
colSums(is.na(data2_interp))
# Funkcja do testu ADF
adf_result <- function(series, name) {
test <- ur.df(series, type = "trend", selectlags = "AIC")
cat("Test ADF dla zmiennej:", name, "\n")
print(summary(test))
cat("\n\n")
}
# Funkcja do testu KPSS
kpss_result <- function(series, name) {
cat("Test KPSS dla zmiennej:", name, "\n")
print(kpss.test(series))
cat("\n\n")
}
# Funkcja do wykresów
plot_series_diff <- function(series, name) {
df <- data.frame(
Time = 1:length(series),
Series = as.numeric(series),
Diff = c(NA, diff(series))
)
p1 <- ggplot(df, aes(x = Time, y = Series)) +
geom_line(color = "blue") +
labs(title = paste("Szereg czasowy:", name), y = name)
p2 <- ggplot(df, aes(x = Time, y = Diff)) +
geom_line(color = "red") +
labs(title = paste("Pierwsza różnica:", name), y = paste("Δ", name))
list(p1, p2)
}
variables <- c("Close", "Inflation", "XAUUSD", "USDPLN",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "OIL")
for (var in variables) {
cat("## Zmienna:", var, "\n\n")
series <- ts(data2[[var]])
# Wykresy
plots <- plot_series_diff(series, var)
print(plots[[1]])
print(plots[[2]])
# Test ADF
adf_result(series, var)
# Test KPSS
kpss_result(series, var)
cat("\n\n")
}
data2 <- read_excel("data2.xlsx")
data2 <- data2[, c("Close", "Inflation",  "XAUUSD",
"USDPLN",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "OIL")]
Y <- data2["Close"]
X <- data2[,c("Inflation","XAUUSD", "USDPLN","WIG20","S&P500","UNEMPLOYMENT","PMI","OIL")]
data2 <- data2[sapply(data_numeric, is.numeric)]
data2_interp <- data2
numeric_cols <- sapply(data2_interp, is.numeric)
data2_interp[numeric_cols] <- lapply(data2_interp[numeric_cols], function(col) {
na.approx(col, na.rm = FALSE)
})
summary(X)
data2 <- read_excel("data2.xlsx")
data2 <- data2[, c("Close", "Inflation",  "XAUUSD",
"USDPLN",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "OIL")]
Y <- data2["Close"]
X <- data2[,c("Inflation","XAUUSD", "USDPLN","WIG20","S&P500","UNEMPLOYMENT","PMI","OIL")]
data2 <- data2[sapply(data_numeric, is.numeric)]
data2_interp <- data2
numeric_cols <- sapply(data2_interp, is.numeric)
data2_interp[numeric_cols] <- lapply(data2_interp[numeric_cols], function(col) {
na.approx(col, na.rm = FALSE)
})
summary(Y)
summary(X)
# Funkcja do testu ADF
adf_result <- function(series, name) {
test <- ur.df(series, type = "trend", selectlags = "AIC")
cat("Test ADF dla zmiennej:", name, "\n")
print(summary(test))
cat("\n\n")
}
# Funkcja do testu KPSS
kpss_result <- function(series, name) {
cat("Test KPSS dla zmiennej:", name, "\n")
print(kpss.test(series))
cat("\n\n")
}
# Funkcja do wykresów
plot_series_diff <- function(series, name) {
df <- data.frame(
Time = 1:length(series),
Series = as.numeric(series),
Diff = c(NA, diff(series))
)
p1 <- ggplot(df, aes(x = Time, y = Series)) +
geom_line(color = "blue") +
labs(title = paste("Szereg czasowy:", name), y = name)
p2 <- ggplot(df, aes(x = Time, y = Diff)) +
geom_line(color = "red") +
labs(title = paste("Pierwsza różnica:", name), y = paste("Δ", name))
list(p1, p2)
}
variables <- c("Close", "Inflation", "XAUUSD", "USDPLN",
"WIG20", "S&P500", "UNEMPLOYMENT", "PMI", "OIL")
for (var in variables) {
cat("## Zmienna:", var, "\n\n")
series <- ts(data2[[var]])
# Wykresy
plots <- plot_series_diff(series, var)
print(plots[[1]])
print(plots[[2]])
# Test ADF
adf_result(series, var)
# Test KPSS
kpss_result(series, var)
cat("\n\n")
}
---
title: "Sprawozdanie"
install.packages("patchwork")
